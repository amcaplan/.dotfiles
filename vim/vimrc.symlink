set nocp
if exists('$DOTFILES')
  source $DOTFILES/vim/autoload/pathogen.vim
  source $DOTFILES/vim/vimrc
endif
execute pathogen#infect()
call pathogen#helptags()

filetype off
syntax manual
autocmd BufWinEnter * if line2byte(line("$") + 1) > 1000000 | set syntax=OFF | else | set syntax=ON | endif

set background=light
colorscheme solarized
filetype plugin indent on

map <Leader>rt :!ctags --tag-relative --extra=+f -Rf.git/tags --exclude=.git.pkg --languages=-javascript,sql<CR><CR>
map <Leader>p <Esc>obinding.pry<Esc>==
map <Leader>P <Esc>Obinding.pry<Esc>==
set tags+=.git/tags
nnoremap <leader>. :CtrlPTag<cr>

set expandtab
set shiftwidth=2
set softtabstop=2

" tabs
autocmd Filetype ruby setlocal ts=2 sw=2 expandtab
autocmd Filetype javascript setlocal ts=2 sw=2 expandtab
autocmd Filetype php setlocal ts=4 sw=4 expandtab
autocmd Filetype org setlocal cc=70
autocmd Filetype go setlocal ts=8 sw=8 noexpandtab

" Keep Vim Fast! https://github.com/chrishunt/dot-files/issues/5#issuecomment-350067217
" autocmd Filetype ruby setlocal nocursorline
" autocmd Filetype ruby setlocal norelativenumber

set ruler
set number
set relativenumber
set laststatus=2
set scrolloff=3
set eol

set autoread
set nocompatible
set backspace=indent,eol,start
set autoindent
set history=50
set ruler
set showcmd
set incsearch
set suffixesadd=.rb
set path+=lib/**,spec/**
let g:ruby_path = &path
let g:ctrlp_custom_ignore = 'node_modules\|DS_Store\|git\|dist'

" neckbeard
let ruby_space_errors = 1
let c_space_errors = 1
set colorcolumn=81

" mouse
set ttyfast
set mouse=a

" NERDtree
map <C-n> :NERDTreeToggle<CR>

" NERDCommenter
let g:NERDSpaceDelims = 1
let g:NERDCompactSexyComs = 1

" Store swapfiles elsewhere
set backupdir=~/.vim/backup//
set directory=~/.vim/swp//

" Multiple cursors
let g:multi_cursor_use_default_mapping=0
let g:multi_cursor_next_key='<C-j>'
let g:multi_cursor_prev_key='<C-m>'
let g:multi_cursor_skip_key='<C-x>'
let g:multi_cursor_quit_key='<Esc>'

" Move lines up and down
nnoremap <A-j> :m .+1<CR>==
nnoremap <A-k> :m .-2<CR>==
inoremap <A-j> <Esc>:m .+1<CR>==gi
inoremap <A-k> <Esc>:m .-2<CR>==gi
vnoremap <A-j> :m '>+1<CR>gv=gv
vnoremap <A-k> :m '<-2<CR>gv=gv

" Copy filepath and line number
nmap ,cs :let @*=join([expand('%'),  line(".")], ':')<CR>
" Copy filepath and line number for running rspec
nmap ,cr :let @*=join(['rspec', join([expand('%'),  line(".")], ':')], ' ')<CR>
